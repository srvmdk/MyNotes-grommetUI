{"version":3,"sources":["utilities/dateUtilities.js","components/AddNoteCard.jsx","utilities/contentUtilities.js","utilities/storageUtilities.js","components/NoteCard.jsx","components/Notes.jsx","components/Appbar.jsx","components/Sidebar.jsx","hoc/PageWrapper.jsx","pages/Home.jsx","containers/CalenderView.jsx","pages/Calendar.jsx","pages/EditNote.jsx","App.js","index.js"],"names":["getDate","date","Date","dateIST","setHours","getHours","setMinutes","getMinutes","UTCtoISTdate","toISOString","substr","getDateFormatted","toDateString","withRouter","props","createdOn","Card","background","onClick","history","push","uuid","CardBody","align","justify","AddCircle","color","size","Text","Heading","level","margin","previewContent","content","charCount","length","split","filter","el","idx","join","localStorageKey","getNotes","storedNotes","JSON","parse","localStorage","getItem","note","saveNotes","notes","setItem","stringify","id","title","CardHeader","direction","gap","pad","horizontal","vertical","Box","fill","flex","right","truncate","Trash","value","evt","stopPropagation","noteId","modifiedNotes","deleteNote","alert","Notes","savedNotes","overflow","Grid","alignContent","columns","rows","map","Appbar","toggleSidebar","Header","height","Menu","User","openSidebar","Collapsible","open","round","width","hoverIndicator","Schedule","removeItem","ClearOption","PageWrapper","useState","setOpenSidebar","children","Home","CalendarView","creationDate","setCreationDate","ResponsiveContext","Consumer","Main","daysOfWeek","onSelect","dateHandler","Calendar","CalenderView","match","params","setNote","useEffect","savedNote","changeHandler","target","name","prev","bottom","textAlign","TextInput","placeholder","onChange","TextArea","resize","font","Button","icon","Save","label","unshift","saveNote","goBack","primary","App","Grommet","theme","global","family","input","weight","full","exact","path","component","EditNote","ReactDOM","render","StrictMode","basename","window","location","pathname","document","getElementById"],"mappings":"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","file":"static/js/main.d7149af9.chunk.js","sourcesContent":["/* Converts UTC hours to IST hours */\r\nexport const UTCtoISTdate = (date = new Date()) => {\r\n  const dateIST = new Date(date);\r\n  dateIST.setHours(dateIST.getHours() + 5);\r\n  dateIST.setMinutes(dateIST.getMinutes() + 30);\r\n  return dateIST;\r\n};\r\n\r\n/* Extracts the date string from IST hours */\r\nexport const getDate = (date) => {\r\n  return UTCtoISTdate(date).toISOString().substr(0, 10);\r\n};\r\n\r\n/* Formats the date like Thu Sat 06 2021  */\r\nexport const getDateFormatted = (date) => {\r\n  const newDate = new Date(date);\r\n  return newDate.toDateString();\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Card, CardBody, Heading, Text } from \"grommet\";\r\nimport { AddCircle } from \"grommet-icons\";\r\n\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport { getDate } from \"../utilities/dateUtilities\";\r\n\r\nconst AddNoteCard = (props) => {\r\n  const { createdOn } = props;\r\n\r\n  return (\r\n    <Card\r\n      background=\"light-3\"\r\n      onClick={() =>\r\n        props.history.push(\r\n          `/edit/${!!createdOn ? createdOn : getDate()}/${uuid()}`\r\n        )\r\n      }\r\n    >\r\n      <CardBody align=\"center\" justify=\"center\">\r\n        <AddCircle color=\"dark-6\" size=\"xlarge\" />\r\n\r\n        <Text color=\"dark-6\">\r\n          <Heading level=\"4\" margin=\"none\">\r\n            Add Note\r\n          </Heading>\r\n        </Text>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(AddNoteCard);\r\n","/* Shortens the content as per the charCount passed */\r\nexport const previewContent = (content, charCount = 0) => {\r\n  return content.length > charCount\r\n    ? `${content\r\n        .split(\"\")\r\n        .filter((el, idx) =>\r\n          !!charCount ? idx <= charCount : idx >= charCount\r\n        )\r\n        .join(\"\")}...`\r\n    : content;\r\n};\r\n","const localStorageKey = \"my-notes\";\r\n\r\n/* Get all the notes from local storage created on specific date or all notes by default */\r\nexport const getNotes = (createdOn) => {\r\n  const storedNotes = JSON.parse(localStorage.getItem(localStorageKey));\r\n  if (!!createdOn) {\r\n    return storedNotes?.filter((note) => note.createdOn === createdOn);\r\n  }\r\n  return storedNotes;\r\n};\r\n\r\n/* Get the note for the provided noteId */\r\nexport const getNote = (noteId) => {\r\n  const storedNotes = getNotes() || [];\r\n  return storedNotes.filter((note) => note.id === noteId)[0];\r\n};\r\n\r\n/* Saves the notes to local storage */\r\nconst saveNotes = (notes) => {\r\n  localStorage.setItem(localStorageKey, JSON.stringify(notes));\r\n};\r\n\r\n/* Save a note to local storage along with existing notes */\r\nexport const saveNote = (note) => {\r\n  const storedNotes = getNotes()?.filter((el) => el.id !== note.id) || [];\r\n  storedNotes.unshift(note);\r\n  saveNotes(storedNotes);\r\n};\r\n\r\n/* Delete note for the provided noteId */\r\nexport const deleteNote = (noteId) => {\r\n  const storedNotes = getNotes();\r\n  const modifiedNotes = storedNotes.filter((note) => note.id !== noteId);\r\n  saveNotes(modifiedNotes);\r\n};\r\n\r\n/* Clears all the notes from local storage */\r\nexport const clearNotes = () => {\r\n  localStorage.removeItem(localStorageKey);\r\n};\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Box, Card, CardBody, CardHeader, Heading, Text } from \"grommet\";\r\nimport { Trash } from \"grommet-icons\";\r\n\r\nimport { previewContent } from \"../utilities/contentUtilities\";\r\nimport { getDateFormatted } from \"../utilities/dateUtilities\";\r\nimport { deleteNote } from \"../utilities/storageUtilities\";\r\n\r\nconst NoteCard = (props) => {\r\n  const { id, title, content, createdOn } = props;\r\n\r\n  const editHandler = () => {\r\n    props.history.push(`/edit/${createdOn}/${id}`);\r\n  };\r\n\r\n  const deleteHandler = (evt) => {\r\n    evt.stopPropagation();\r\n    deleteNote(id);\r\n    alert(\"Note deleted !!!\");\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Card background=\"dark-6\" onClick={editHandler}>\r\n      <CardHeader\r\n        align=\"start\"\r\n        background=\"accent-4\"\r\n        direction=\"column\"\r\n        gap=\"none\"\r\n        pad={{ horizontal: \"small\", vertical: \"xsmall\" }}\r\n      >\r\n        <Box fill align=\"center\" direction=\"row\" justify=\"between\">\r\n          <Box flex pad={{ right: \"small\" }}>\r\n            <Heading truncate level=\"6\" margin=\"none\">\r\n              {title}\r\n            </Heading>\r\n            <Text margin=\"none\" size=\"10px\">\r\n              {getDateFormatted(createdOn)}\r\n            </Text>\r\n          </Box>\r\n\r\n          <Trash size=\"small\" value=\"trash\" onClick={deleteHandler} />\r\n        </Box>\r\n      </CardHeader>\r\n\r\n      <CardBody background=\"light-3\" pad=\"small\">\r\n        <Text size=\"13px\">{previewContent(content)}</Text>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withRouter(NoteCard);\r\n","import React from \"react\";\r\n\r\nimport { Box, Grid } from \"grommet\";\r\n\r\nimport AddNoteCard from \"./AddNoteCard\";\r\nimport NoteCard from \"../components/NoteCard\";\r\n\r\nimport { getNotes } from \"../utilities/storageUtilities\";\r\n\r\nconst Notes = (props) => {\r\n  const { createdOn } = props;\r\n\r\n  const savedNotes = getNotes(createdOn);\r\n  \r\n  return (\r\n    <Box align=\"center\" fill overflow={{ vertical: \"scroll\" }} pad=\"small\">\r\n      <Grid\r\n        alignContent=\"center\"\r\n        columns=\"small\"\r\n        rows=\"small\"\r\n        gap=\"medium\"\r\n        margin=\"small\"\r\n        fill=\"horizontal\"\r\n      >\r\n        <AddNoteCard createdOn={createdOn} />\r\n\r\n        {!!savedNotes &&\r\n          !!savedNotes.length &&\r\n          savedNotes.map((note) => <NoteCard key={note.id} {...note} />)}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React from \"react\";\r\n\r\nimport { Header, Heading } from \"grommet\";\r\nimport { Menu, User } from \"grommet-icons\";\r\n\r\nconst Appbar = (props) => {\r\n  const { toggleSidebar } = props;\r\n\r\n  return (\r\n    <Header\r\n      align=\"center\"\r\n      background=\"accent-4\"\r\n      height=\"xxsmall\"\r\n      justify=\"between\"\r\n      pad={{ horizontal: \"medium\" }}\r\n    >\r\n      <Menu onClick={toggleSidebar} />\r\n\r\n      <Heading level=\"3\" margin=\"none\">\r\n        My Notes\r\n      </Heading>\r\n\r\n      <User />\r\n    </Header>\r\n  );\r\n};\r\n\r\nexport default Appbar;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Box, Collapsible, Text } from \"grommet\";\r\nimport { Home, ClearOption, Schedule } from \"grommet-icons\";\r\n\r\nimport { clearNotes } from \"../utilities/storageUtilities\";\r\n\r\nconst Sidebar = (props) => {\r\n  const { openSidebar } = props;\r\n\r\n  const handleClear = () => {\r\n    clearNotes();\r\n    props.history.push(\"/\");\r\n    alert(\"Notes cleared!!!\");\r\n  };\r\n\r\n  return (\r\n    <Collapsible direction=\"horizontal\" open={openSidebar}>\r\n      <Box\r\n        align=\"center\"\r\n        justify=\"evenly\"\r\n        background=\"accent-4\"\r\n        height=\"medium\"\r\n        margin={{ horizontal: \"small\" }}\r\n        round=\"medium\"\r\n        width=\"xxsmall\"\r\n      >\r\n        <Box\r\n          align=\"center\"\r\n          hoverIndicator=\"background\"\r\n          onClick={() => props.history.push(\"/\")}\r\n          width=\"small\"\r\n        >\r\n          <Home size=\"medium\" />\r\n          <Text size=\"10px\">Home</Text>\r\n        </Box>\r\n\r\n        <Box\r\n          align=\"center\"\r\n          hoverIndicator\r\n          onClick={() => props.history.push(\"/calendar\")}\r\n          width=\"small\"\r\n        >\r\n          <Schedule size=\"medium\" />\r\n          <Text size=\"10px\">Calendar</Text>\r\n        </Box>\r\n\r\n        <Box\r\n          align=\"center\"\r\n          hoverIndicator=\"background\"\r\n          onClick={handleClear}\r\n          width=\"small\"\r\n        >\r\n          <ClearOption size=\"medium\" />\r\n          <Text size=\"10px\">Clear All</Text>\r\n        </Box>\r\n      </Box>\r\n    </Collapsible>\r\n  );\r\n};\r\n\r\nexport default withRouter(Sidebar);\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Box } from \"grommet\";\r\n\r\nimport Appbar from \"../components/Appbar\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\nconst PageWrapper = (props) => {\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n\r\n  const toggleSidebar = () => {\r\n    setOpenSidebar(!openSidebar);\r\n  };\r\n\r\n  return (\r\n    <Box fill background=\"light-1\">\r\n      <Appbar toggleSidebar={toggleSidebar} />\r\n\r\n      <Box flex direction=\"row\" align=\"center\">\r\n        <Sidebar openSidebar={openSidebar} />\r\n        {props.children}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PageWrapper;\r\n","import React from \"react\";\r\n\r\nimport Notes from \"../components/Notes\";\r\n\r\nimport PageWrapper from \"../hoc/PageWrapper\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <PageWrapper>\r\n      <Notes />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Calendar, Main, ResponsiveContext } from \"grommet\";\r\nimport Notes from \"../components/Notes\";\r\n\r\nimport { getDate } from \"../utilities/dateUtilities\";\r\n\r\nconst CalendarView = () => {\r\n  const [creationDate, setCreationDate] = useState(getDate());\r\n\r\n  const dateHandler = (date) => {\r\n    setCreationDate(getDate(date));\r\n  };\r\n\r\n  return (\r\n    <ResponsiveContext.Consumer>\r\n      {(size) => (\r\n        <Main\r\n          flex\r\n          direction={size === \"small\" ? \"column\" : \"row\"}\r\n          align={size === \"small\" ? \"center\" : \"stretch\"}\r\n          justify=\"evenly\"\r\n        >\r\n          <Calendar\r\n            date={creationDate}\r\n            daysOfWeek\r\n            margin=\"small\"\r\n            onSelect={(date) => dateHandler(date)}\r\n            size=\"small\"\r\n          />\r\n\r\n          <Notes createdOn={creationDate} />\r\n        </Main>\r\n      )}\r\n    </ResponsiveContext.Consumer>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n","import React from \"react\";\r\n\r\nimport CalenderView from \"../containers/CalenderView\";\r\n\r\nimport PageWrapper from \"../hoc/PageWrapper\";\r\n\r\nconst Calendar = () => {\r\n  return (\r\n    <PageWrapper>\r\n      <CalenderView />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport { Box, Button, Text, TextArea, TextInput } from \"grommet\";\r\nimport { Save } from \"grommet-icons\";\r\n\r\nimport PageWrapper from \"../hoc/PageWrapper\";\r\n\r\nimport { getDateFormatted } from \"../utilities/dateUtilities\";\r\nimport { getNote, saveNote } from \"../utilities/storageUtilities\";\r\n\r\nconst EditNote = (props) => {\r\n  const { id, createdOn } = props.match.params;\r\n\r\n  const [note, setNote] = useState({\r\n    id,\r\n    title: \"\",\r\n    content: \"\",\r\n    createdOn,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedNote = getNote(id);\r\n\r\n    if (savedNote) {\r\n      setNote(savedNote);\r\n    }\r\n  }, [id]);\r\n\r\n  const changeHandler = (evt) => {\r\n    const { name, value } = evt.target;\r\n    setNote((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    if (!note.title || !note.content) {\r\n      alert(\"Error: Unable to save.\\nTitle or Content missing!!!\");\r\n      return;\r\n    }\r\n    saveNote(note);\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <Box pad=\"medium\" fill>\r\n        <Text\r\n          color=\"dark-6\"\r\n          margin={{ bottom: \"small\" }}\r\n          size=\"xsmall\"\r\n          textAlign=\"end\"\r\n        >\r\n          {`Created on: ${getDateFormatted(note.createdOn)}`}\r\n        </Text>\r\n\r\n        <Box align=\"center\" height=\"medium\">\r\n          <TextInput\r\n            placeholder=\"Type note title\"\r\n            name=\"title\"\r\n            value={note.title || \"\"}\r\n            onChange={changeHandler}\r\n          />\r\n\r\n          <Box fill margin={{ vertical: \"medium\" }}>\r\n            <TextArea\r\n              fill\r\n              placeholder=\"Type note content\"\r\n              name=\"content\"\r\n              resize=\"vertical\"\r\n              value={note.content || \"\"}\r\n              onChange={changeHandler}\r\n              font=\"small\"\r\n            />\r\n          </Box>\r\n\r\n          <Button\r\n            color=\"accent-4\"\r\n            icon={<Save />}\r\n            label=\"Save\"\r\n            onClick={saveHandler}\r\n            primary\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default withRouter(EditNote);\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Grommet } from \"grommet\";\n\nimport Home from \"./pages/Home\";\nimport Calendar from \"./pages/Calendar\";\nimport EditNote from \"./pages/EditNote\";\n\nfunction App() {\n  const theme = {\n    global: {\n      font: {\n        family: \"Roboto\",\n        size: \"15px\",\n        height: \"15px\",\n      },\n      input: {\n        font: {\n          weight: 400,\n        },\n      },\n    },\n  };\n\n  return (\n    <Grommet theme={theme} full>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/calendar\" component={Calendar} />\n        <Route exact path=\"/edit/:createdOn/:id\" component={EditNote} />\n      </Switch>\n    </Grommet>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={window.location.pathname || ''}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}